{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "..\\..\\App.svelte"
  ],
  "sourcesContent": [
    "<script>\n\n    import { onMount, onDestroy } from 'svelte';\n\timport Cookies from 'js-cookie/src/js.cookie.js'\n    \n   let food = [\n\t\t{ title:       'Bell Pepper',\n          img:         'images/product-1.jpg', \n          description: 'Far far away, behind the word mountains, far from the countries',\n          currency:    '$',\n          price:       80.00,\n          quantity:     1,\n          total_price: 80.00\n          },\n        { title:       'Stawberry',\n          img:         'images/product-2.jpg', \n          description: 'Far far away, behind the word mountains, far from the countries',\n          currency:    '$',\n          price:       120.00,\n          quantity:     1,\n          total_price: 120.00\n          },\n        { title:       'Green beans',\n          img:         'images/product-3.jpg', \n          description: 'Far far away, behind the word mountains, far from the countries',\n          currency:    '$',\n          price:       20.00,\n          quantity:     1,\n          total_price: 20.00\n          },          \n\t];\n    \n    function onInterval(callback, ms) {\n        const interval = setInterval(callback, ms);\n        \n        onDestroy(() => {\n            clearInterval(interval);\n        });    \n    }\n    \n\tfunction getRef(id) {return document.getElementById(id).href;\n\t};\n\t\n    const IMG_GEN_URL = getRef('picsum-ref');\n   \n    var count = 0;\n    onInterval(async () => {\n        const response = await fetch(IMG_GEN_URL);\n        food[count].img = await response.url;  \n        count += 1;\n        if (count >= food.length)\n            count = 0;    \n    }, 1000);\n\t\n\t\n\tconst CSRF_TOKEN = Cookies.get('csrftoken');\n    const WISHLIST_URL = getRef(\"wishlist-ref\")\n\t\n\tonInterval (async () => {\n\t\tconst response = await fetch (WISHLIST_URL, {\n\t\t\t\t\t\t\t\t\t\theader: {\n\t\t\t\t\t\t\t\t\t\t\t'Contenr-Type': 'application/json',\n\t\t\t\t\t\t\t\t\t\t\t'Accept': 'application/json, text-plain, */*',\n\t\t\t\t\t\t\t\t\t\t\t'X-Requested-With': 'XMLHttpRequest',\n\t\t\t\t\t\t\t\t\t\t\t'X-CSRF_TOKEN': CSRF_TOKEN \n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\tmethod: 'POST',\n\t\t\t\t\t\t\t\t\t\tcredentials: 'same-origin',\n\t\t\t\t\t\t\t\t\t\tbody: JSON.stringify({})\n\t\t\t\t\t\t\t\t\t});\n\t\tconsole.log(await response.text());\n\t\n\t},1000);\n\n\n   \n    //onMount(async () => {\n    //    const response = await fetch(IMG_GEN_URL);\n    //    food[0].img = await response.url;    \n   // });\n\n\n\t    \n</script>\n\n<main>\n    \n<table class=\"table\">\n    <thead class=\"thead-primary\">\n      <tr class=\"text-center\">\n        <th>&nbsp;</th>\n        <th>Product List</th>\n        <th>&nbsp;</th>\n        <th>Price</th>\n        <th>Quantity</th>\n        <th>Total</th>\n      </tr>\n    </thead>\n    <tbody >\n    \n        {#each food as item }\n          <tr class=\"text-center\">\n            <td class=\"product-remove\"><a href=\".\"><span class=\"ion-ios-close\"></span></a></td>\t\t\t\t\t\t        \n            <td class=\"image-prod\"><div class=\"img\" style=\"background-image:url({item.img});\"></div></td>\t\t\t\t\t\t        \n            <td class=\"product-name\">\n                <h3>{item.title}</h3>\n                <p>{item.description}</p>\n            </td>\t\t\t\t\t\t        \n            <td class=\"price\">{item.currency}{item.price}</td>\t\t\t\t\t\t        \n            <td class=\"quantity\">\n                <div class=\"input-group mb-3\">\n                <input type=\"number\" name=\"quantity\" class=\"quantity form-control input-number\" bind:value={item.quantity} min=1 max=100>\n            </div>\n          </td>\t\t\t\t\t\t        \n            <td class=\"total\">{item.currency}{item.quantity*item.price}</td>\n          </tr><!-- END TR-->\n        {/each}\n\n    </tbody>\n  </table>\n\n\n</main>\n\n<style>\n\n\t@media (min-width: 640px) {\n\t\tmain {\n\t\t\tmax-width: none;\n\t\t}\n\t}\n</style>"
  ],
  "names": [],
  "mappings": "AA8HC,MAAM,AAAC,YAAY,KAAK,CAAC,AAAC,CAAC,AAC1B,IAAI,cAAC,CAAC,AACL,SAAS,CAAE,IAAI,AAChB,CAAC,AACF,CAAC"
}